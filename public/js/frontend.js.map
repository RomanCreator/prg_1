{"version":3,"sources":["orderwindow.js","phone-panel.js","searchmap.js","simplegallery.js"],"names":[],"mappingsnfile":"frontend.js","sourcesContent":["/**\n * Created by roman on 22.08.16.\n */\nvar OrderWindow = function (name, phone, typeResearchesOptions) {\n    this.template = '<div class=\"modal fade\" id=\"callOrder\" tabindex=\"-1\" role=\"dialog\">'+\n                        '<div class=\"modal-dialog modal-sm order-window\" role=\"document\">'+\n                            '<div class=\"modal-content\">'+\n                                '<form method=\"post\" action=\"/callback_order\">'+\n                                    '<div class=\"modal-header\">'+\n                                        '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><img src=\"/img/icon_window_close.png\"</button>'+\n                                    '</div>'+\n                                    '<div class=\"modal-body\">'+\n                                        '<div class=\"order-window__label\">Запишитесь по телефону</div>'+\n                                        '<div class=\"order-window__promophone\">8 800 888-00-00</div>'+\n                                        '<div class=\"order-window__label\">или отправьте заявку online:</div>'+\n                                        '<div class=\"form-group\">'+\n                                            '<input type=\"text\" name=\"phone\" class=\"form-element\" required>'+\n                                        '</div>'+\n                                        '<div class=\"form-group\">'+\n                                            '<input type=\"text\" name=\"name\" class=\"form-element\" placeholder=\"Ваше имя\" required>'+\n                                        '</div>'+\n                                        '<div class=\"form-group\">'+\n                                            '<select name=\"type_research\" class=\"form-element\">'+\n                                                '<option>Выберите исследование</option>'+\n                                            '</select>'+\n                                        '</div>'+\n                                        '<div class=\"form-group\">'+\n                                            '<textarea class=\"form-element\" class=\"form-element\" name=\"message\" placeholder=\"Текст сообщения\"></textarea>'+\n                                        '</div>'+\n                                        '<div class=\"form-group order-window__action-group\">'+\n                                            '<button type=\"submit\" class=\"btn btn-info\">Отправить</button>'+\n                                        '</div>'+\n                                        '<input type=\"hidden\" name=\"hospital_id\">'+\n                                        '<input type=\"hidden\" name=\"_token\">' +\n                                    '</div>'+\n                                    '<div class=\"modal-footer\">'+\n                                    '</div>'+\n                                '</form>'+\n                            '</div>'+\n                        '</div>'+\n                    '</div>';\n    this.$template = $(this.template);\n\n\n    if (name) {\n        this.$template.find('input[name=\"name\"]').val(name);\n    }\n\n    if (phone) {\n        this.$template.find('input[name=\"phone\"]').val(phone);\n    }\n\n    if  (typeResearchesOptions) {\n        try {\n            typeResearchesOptions = JSON.parse(typeResearchesOptions);\n        } catch (e) {}\n        this.fillResearches(typeResearchesOptions);\n    }\n\n    this.$template.find('input[name=\"phone\"]').mask('0 (000) 000-00-00', {placeholder:\"+_ (___) ___-__-__\"});\n    var self = this;\n\n    /* Отправка данных на сервер */\n    this.$template.find('form').bind('submit', function () {\n        var name = self.$template.find('input[name=\"name\"]').val();\n        var phone = self.$template.find('input[name=\"phone\"]').val();\n        var research = self.$template.find('select[name=\"type_research\"]').val();\n        var message = self.$template.find('textarea[name=\"message\"]').val();\n        var token = self.$template.find('input[name=\"_token\"]').val();\n        self.$template.find('btn').css('display', 'none');\n        $.ajax({\n            method:'post',\n            cache: false,\n            url: '/callback_order',\n            data: 'name='+name+'&phone='+phone+'&research='+research+'&message='+message+'&_token='+token,\n            context: self,\n            success: function (data) {\n                console.log (data);\n                this.$template.find('.modal-body').empty().html('Ваша заявка успешно отправлена.');\n            },\n            error: function (xhr) {\n                console.log (xhr);\n            }\n        });\n        return false;\n    });\n\n    this.$template.on('hidden.bs.modal', function (e) {\n        self.$template.remove();\n    });\n\n    var key = $('body').data('key');\n    this.$template.find('input[name=\"_token\"]').val(key);\n\n    /* Перед добавление в дум дерево, удалим старые окна с заявками, ибо они не отработали, а окно может быть только одно */\n    $('body').find('.order-window').closest('div').remove();\n    $('body').append(this.$template);\n};\n\nOrderWindow.prototype.fillResearches = function (typeResearchesOptions) {\n    var select = this.$template.find('select[name=\"type_research\"]');\n    for (var i = 0; i < typeResearchesOptions.length; i++) {\n        select.append('<option value=\"'+typeResearchesOptions[i].val+'\">'+typeResearchesOptions[i].name+'</option>');\n    }\n}\n\nOrderWindow.prototype.show = function () {\n    $.ajax({\n        method:'get',\n        context: this,\n        url: '/allresearches',\n        chache: false,\n        success: function (data) {\n            try {\n                data = JSON.parse(data);\n            } catch (e) {}\n            this.fillResearches(data);\n            this.$template.modal('show');\n        },\n        error: function (xhr) {\n            console.log (xhr);\n        }\n    });\n};\n\n$(document).ready(function () {\n    $('.info-panel__link').click(function () {\n        var OW = new OrderWindow();\n        OW.show();\n        return false;\n    });\n});","/**\n * Created by roman on 25.07.16.\n */\nvar PhonePanel = function (selector) {\n\n    this.$panel = $(selector);\n    this.$buttonToggle = this.$panel.find('.phone-panel__footer');\n    this.$body = this.$panel.find('.phone-panel__body');\n    this.$body.find('input[name=\"phone\"]').mask('0 (000) 000-00-00', {placeholder:\"Телефон\"});\n\n    var self = this;\n    if (this.$panel.hasClass('enabled')) {\n        this.$buttonToggle.bind('click', function(ev) {\n            ev.stopPropagation();\n            self.showForm();\n        });\n\n        this.$body.bind('click', function (ev) {\n            ev.stopPropagation();\n        });\n\n        $('body').bind('click', function (){\n            self.hideForm();\n        });\n    } else {\n\n        this.$buttonToggle.bind('click', function(ev) {\n            self.sendForm();\n            return false;\n        });\n    }\n\n}\n\nPhonePanel.prototype.showForm = function () {\n    if  (this.$body.css('display') == 'block') {\n        //Запускаем функцию проверки и отправки формы\n        this.sendForm();\n    } else {\n        this.$body.show();\n    }\n}\n\nPhonePanel.prototype.hideForm = function () {\n    this.$body.hide();\n}\n\nPhonePanel.prototype.sendForm = function () {\n    var phone = this.$body.find('input[name=\"phone\"]').val();\n    var name = this.$body.find('input[name=\"name\"]').val();\n    console.log (name);\n    var window = new OrderWindow(name, phone);\n    window.show();\n}\n\n$(document).ready (function (){\n    new PhonePanel('.phone-panel:not(.enabled)');\n    new PhonePanel('.phone-panel.enabled');\n});","/**\n * Created by roman on 09.08.16.\n */\nvar SearchMap = function (selector) {\n    this.defaultCenterMap = [59.939095, 30.315868];\n    this.defaultZoom = 16;\n    this.defaultPlacemark = '/img/icon_placemark.png';\n\n    this.templateInfoWindow = '<div class=\"searchmap__window\">'+\n                                    '<div class=\"searchmap__window__header\">'+\n                                        '<span class=\"searchmap__window__header__label\"></span>'+\n                                    '</div>'+\n                                    '<div class=\"searchmap__window__body\">'+\n                                        '<div class=\"searchmap__window__district\"></div>'+\n                                        '<div class=\"searchmap__window__address\"></div>'+\n                                        '<ul class=\"searchmap__window__workweek\"></ul>'+\n                                        '<div class=\"searchmap__window__phone\">(812) 490-75-73</div>'+\n                                        '<div class=\"searchmap__window__promophone\">'+\n                                            '<div class=\"searchmap__window__promophone__label\">Запишитесь по номеру</div>'+\n                                            '8 (800) 888-00-00'+\n                                        '</div>'+\n                                    '</div>'+\n                              '</div>';\n\n    this.$mapContainer = $(selector);\n    this.map = null;\n    this.MedicalCenters = this.$mapContainer.data('hospitals');\n    if ((typeof this.MedicalCenters) !== 'object') {\n        this.MedicalCenters = [];\n    }\n\n    var self = this;\n    /* Активизируем карту и расставим тыцки на ней, за одно не забудем у пользователя запросить определение местонахождения */\n    ymaps.ready(function () {\n        /* Определяем пользователя */\n        ymaps.geolocation.get().then (function (res) {\n            var bounds = res.geoObjects.get(0).properties.get('boundedBy');\n            var mapState = ymaps.util.bounds.getCenterAndZoom(\n                    bounds,\n                    [self.$mapContainer.width(), self.$mapContainer.height()]\n            );\n            mapState.controls = [];\n            mapState.zoom = self.defaultZoom;\n            self.map = new ymaps.Map(self.$mapContainer.attr('id'), mapState);\n            self.setObjectsOnAMap();\n        }, function (err) {\n            self.map = new ymaps.Map(self.$mapContainer.attr('id'), {\n                center: self.defaultCenterMap,\n                zoom: self.defaultZoom,\n                controls: []\n            });\n            self.setObjectsOnAMap();\n        });\n\n    });\n};\n\n/* Устанавливает все медицинские центры на карту */\nSearchMap.prototype.setObjectsOnAMap = function () {\n    var countObjects = this.MedicalCenters.length;\n    var collectionOfMedicalCenters = new ymaps.GeoObjectCollection();\n    var self = this;\n\n    for (var i = 0; i < countObjects; i++) {\n        if (this.MedicalCenters[i].technical_address) {\n            if ( (typeof this.MedicalCenters[i].technical_address) !== 'object') {\n                try {\n                    this.MedicalCenters[i].technical_address = JSON.parse(this.MedicalCenters[i].technical_address);\n                } catch (Err) {\n                    continue;\n                }\n            }\n\n            if (!this.MedicalCenters[i].technical_address.coordinates) {\n                continue;\n            }\n\n            var placemark = new ymaps.Placemark(this.MedicalCenters[i].technical_address.coordinates, {\n                        district: this.MedicalCenters[i].district,\n                        address: this.MedicalCenters[i].address,\n                        subway: this.MedicalCenters[i].subway,\n                        name: this.MedicalCenters[i].name,\n                        weekwork: this.MedicalCenters[i].weekwork,\n                    },\n                    {\n                        iconLayout: 'default#image',\n                        iconImageHref: this.defaultPlacemark,\n                        iconImageSize: [57, 75],\n                        iconImageOffset: [-29, -75],\n                        draggable: false\n                    });\n            /* Навешиваем событие при клике на метку */\n            placemark.events.add('click', function (e) {\n                self.showInfo(e);\n            });\n\n\n            collectionOfMedicalCenters.add(placemark);\n\n        }\n    }\n\n    this.map.geoObjects.add(collectionOfMedicalCenters);\n}\n\n/* Отображает информацию о медицинском центре */\nSearchMap.prototype.showInfo = function (placemark) {\n    var $window = $(this.templateInfoWindow);\n    this.$mapContainer.find('.'+$window.attr('class')).remove();\n    $window.find('.searchmap__window__header__label').text(placemark._cache.target.properties._data.name);\n    $window.find('.searchmap__window__district').text(placemark._cache.target.properties._data.district);\n    $window.find('.searchmap__window__address').html(placemark._cache.target.properties._data.address+'<br>'+'м. '+placemark._cache.target.properties._data.subway);\n    var workWeek = '';\n    var workWeekProp = placemark._cache.target.properties._data.weekwork;\n    for (var i =0; i < workWeekProp.length; i++) {\n        workWeek += '<li>'+workWeekProp[i]+'</li>';\n    }\n    $window.find('.searchmap__window__workweek').append(workWeek);\n    this.$mapContainer.append($window);\n}\n\n\n\n$(document).ready(function () {\n    new SearchMap('.searchmap');\n});","/**\n * Created by roman on 16.08.16.\n */\nvar simplegallery = function (element) {\n    this.$gallery = $(element);\n    this.$bigImg = this.$gallery.find('.gallery__big > .gallery__big__elem');\n    this.$controlUp = this.$gallery.find('.gallery__nav > .gallery__nav__control.gallery__nav__control_up');\n    this.$controlDown = this.$gallery.find('.gallery__nav > .gallery__nav__control.gallery__nav__control_down');\n    this.$wrapper = this.$gallery.find('.gallery__nav > .gallery__nav__wrapper');\n    this.miniature = this.$gallery.find('.gallery__nav > .gallery__nav__wrapper > .gallery__nav__elem');\n\n    var self = this;\n\n    this.miniature.bind('click', function () {\n        self.changeMiniature(this);\n        return false;\n    });\n\n    this.$controlUp.bind('click', function () {\n        self.scrollTop();\n        return false;\n    });\n\n    this.$controlDown.bind('click', function () {\n        self.scrollDown();\n        return false;\n    });\n\n};\n\nsimplegallery.prototype.changeMiniature = function (elem) {\n    var bigImg = $(elem).data('orig');\n    this.$bigImg.attr('src', bigImg);\n};\n\nsimplegallery.prototype.scrollTop = function () {\n    /* Вычислим размер миниатюры изображения, и текущий скролл */\n    var currentScroll = this.$wrapper.scrollTop();\n    var height = this.miniature.eq(1).outerHeight(true);\n    if (currentScroll > 0 && (currentScroll-height >= 0)) {\n        this.$wrapper.scrollTop(currentScroll-height);\n    } else {\n        this.$wrapper.scrollTop(0);\n    }\n};\n\nsimplegallery.prototype.scrollDown = function () {\n    var currentScroll = this.$wrapper.scrollTop();\n    var height = this.miniature.eq(1).outerHeight(true);\n    if (currentScroll < (this.miniature.length*height)) {\n        this.$wrapper.scrollTop(currentScroll+height);\n    } else {\n        this.$wrapper.scrollTop(this.miniature.length*height);\n    }\n}\n\n$(document).ready(function () {\n    new simplegallery($('[data-toggle=\"simple_gallery\"]'));\n});"],"sourceRoot":"/source/"}