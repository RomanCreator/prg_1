{"version":3,"sources":["backend.js","countdown.js","imagepicker.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"backend.js","sourcesContent":["/**\n * Created by roman on 29.06.16.\n */\n$(document).ready(function () {\n    /**\n     * Инициализация всех тултипов\n     */\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    var $CkEditor = $('[data-toggle=\"ckeditor\"]');\n    for (var i = $CkEditor.length; i--;) {\n        /* Маленькая инициализационная область для CKEditor */\n        var name = $CkEditor.eq(i).attr('name');\n        var id = $CkEditor.eq(i).attr('id');\n\n        var errMessage = false;\n        if (name == undefined) {\n             errMessage = 'Не задан атрибут name!';\n        }\n\n        if (id == undefined) {\n            errMessage += ' Не задан атрибут id!';\n        }\n\n        if (CKEDITOR == undefined) {\n            errMessage += 'Не определен CkEditor';\n        }\n\n        if (errMessage) {\n            errMessage += ' Для элемента '+$CkEditor.eq(i)[0];\n            console.log(errMessage);\n            continue;\n        }\n\n        /* Если же все условия выполнены для замечательной работы CKEditor инициализируем его */\n        CKEDITOR.replace(id);\n    }\n\n\n    $('[data-toggle=\"countdown\"]').countdown();\n    $('[data-toggle=\"imagepicker\"]').imagepicker();\n});","/**\n * Created by roman on 29.06.16.\n */\n+function ($) {\n    'use strict';\n\n    var CountdownElemForm = function (element, options) {\n        this.$element = $(element);\n        this.CurrentOption = this.getOptions (options);\n        this.$form = this.$element.closest('form');\n        this.intervalId = null;\n        this.countdownState = 'start';\n        this.innerHtml = null;\n\n        var self = this;\n        this.$form.bind('submit.countdown', function () {\n            return self.sendForm();\n        });\n\n        this.$element.bind('click.countdown', function () {\n            if (self.countdownState == 'start') {\n                self.countdownState = 'proccess';\n                self.innerHtml = self.$element.html();\n                self.$element.html(self.CurrentOption.countdownTime);\n                self.intervalId = setInterval(function () {\n                    self.action.call(self);\n                }, self.CurrentOption.countdownIntervalSec*1000);\n            }\n\n            if (self.countdownState == 'end') {\n                return true;\n            }\n            return false;\n        });\n    };\n\n    /**\n     * Сам непосредственный экшн для отсчета\n     */\n    CountdownElemForm.prototype.action = function () {\n        var time = parseInt(this.$element.html());\n        if (time > 0) {\n            time--;\n            this.$element.html(time);\n        } else {\n            this.$element.html(this.innerHtml);\n            this.countdownState = 'end';\n            clearInterval(this.intervalId);\n        }\n    }\n\n    /**\n     * Разршаем отправку формы тогда и только тогда, когда\n     * заканчивается обратный отсчет, до этого форму не отрпавляем\n     * @returns {boolean}\n     */\n    CountdownElemForm.prototype.sendForm = function () {\n        if (this.countdownState !== 'end') {\n            return false;\n        }\n\n        return true;\n    }\n\n    CountdownElemForm.prototype.options = {\n        countdownTime: 3,\n        countdownIntervalSec: 1,\n    };\n\n    CountdownElemForm.prototype.getOptions = function (options) {\n        if (options && (typeof options) == 'Object') {\n            for (var key in this.options) {\n                if (!options[key]) {\n                    options[key] = this.options[key];\n                };\n            }\n\n            return options;\n        }\n\n        return this.options;\n    };\n\n    var Countdown = function (options) {\n        //вернуть надо объект jQuery\n        return this.each(function () {\n            new CountdownElemForm(this, options);\n        });\n    };\n\n\n    var old = $.fn.countdown;\n\n    $.fn.countdown = Countdown;\n    $.fn.countdown.constructor = Countdown;\n\n    $.fn.countdown.noConflict = function () {\n        $.fn.countdown = old;\n        return this;\n    }\n\n}(jQuery);","/**\n * Created by roman on 10.07.16.\n */\n+function ($) {\n    'use strict';\n\n    var ImagePickerElem = function (element, option) {\n        this.template = '<div class=\"imagepicker__container\">'+\n                            '<label class=\"imagepicker\">'+\n                                '<div class=\"imagepicker__hover-place\">'+\n                                '</div>'+\n                            '</label>'+\n                        '</div>';\n        this.inputClass = 'imagepicker__input';\n        this.templateImg = '<img class=\"imagepicker__miniature img-responsive\">';\n        this.$element = $(element);\n\n        this.init();\n\n        var self = this;\n        this.$element.on('change', function () {\n            self.changedImage();\n        });\n    }\n\n    ImagePickerElem.prototype.init = function () {\n        this.$element.addClass(this.inputClass);\n        var src = this.$element.data('src');\n        this.$template = $(this.template);\n        this.$element.after(this.$template);\n\n        if (src != undefined) {\n            var $img = $(this.templateImg).attr('src', src);\n            this.$template.find('.imagepicker__hover-place').append($img);\n        }\n\n        this.$template.find('.imagepicker__hover-place').append(this.$element);\n    }\n\n    ImagePickerElem.prototype.changedImage = function () {\n        if (this.$element[0] && this.$element[0].files[0]) {\n            var file = this.$element[0].files[0];\n\n            var reader = new FileReader();\n            var self = this;\n            reader.onload = (function (file){\n                return function (e) {\n                    var $img = self.$template.find('img');\n                    if ($img.length == 0) {\n                        $img = $(self.templateImg).attr('src', e.target.result);\n                        self.$template.find('.imagepicker__hover-place').append($img);\n                    } else {\n                        self.$template.find('img.imagepicker__miniature').attr('src', e.target.result);\n                    }\n                };\n            })(file);\n\n            reader.readAsDataURL(file);\n        }\n    }\n\n    var ImagePicker = function (option) {\n        return this.each(function () {\n            new ImagePickerElem(this, option);\n        });\n    };\n\n    var old = $.fn.imagepicker;\n\n    $.fn.imagepicker = ImagePicker;\n    $.fn.imagepicker.constructor = ImagePicker;\n\n    $.fn.imagepicker.noConflict = function () {\n        $.fn.imagepicker = old;\n        return this;\n    }\n\n}(jQuery);"],"sourceRoot":"/source/"}