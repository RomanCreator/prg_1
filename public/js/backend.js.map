{"version":3,"sources":["backend.js","countdown.js","imagepicker.js","imagepickermult.js","weekwork.js","ymap.js"],"names":[],"mappingsrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChjrfile":"backend.js","sourcesContent":["/**\n * Created by roman on 29.06.16.\n */\n$(document).ready(function () {\n    /**\n     * Инициализация всех тултипов\n     */\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    var $CkEditor = $('[data-toggle=\"ckeditor\"]');\n    for (var i = $CkEditor.length; i--;) {\n        /* Маленькая инициализационная область для CKEditor */\n        var name = $CkEditor.eq(i).attr('name');\n        var id = $CkEditor.eq(i).attr('id');\n\n        var errMessage = false;\n        if (name == undefined) {\n             errMessage = 'Не задан атрибут name!';\n        }\n\n        if (id == undefined) {\n            errMessage += ' Не задан атрибут id!';\n        }\n\n        if (CKEDITOR == undefined) {\n            errMessage += 'Не определен CkEditor';\n        }\n\n        if (errMessage) {\n            errMessage += ' Для элемента '+$CkEditor.eq(i)[0];\n            console.log(errMessage);\n            continue;\n        }\n\n        /* Если же все условия выполнены для замечательной работы CKEditor инициализируем его */\n        CKEDITOR.replace(id);\n    }\n\n\n    $('[data-toggle=\"countdown\"]').countdown();\n    $('[data-toggle=\"imagepicker\"]').imagepicker();\n    $('[data-toggle=\"ymap\"]').ymap();\n    $('[data-toggle=\"imagepickermult\"]').imagepickermult();\n    $('[data-toggle=\"weekwork\"]').weekwork();\n});","/**\n * Created by roman on 29.06.16.\n */\n+function ($) {\n    'use strict';\n\n    var CountdownElemForm = function (element, options) {\n        this.$element = $(element);\n        this.CurrentOption = this.getOptions (options);\n        this.$form = this.$element.closest('form');\n        this.intervalId = null;\n        this.countdownState = 'start';\n        this.innerHtml = null;\n\n        var self = this;\n        this.$form.bind('submit.countdown', function () {\n            return self.sendForm();\n        });\n\n        this.$element.bind('click.countdown', function () {\n            if (self.countdownState == 'start') {\n                self.countdownState = 'proccess';\n                self.innerHtml = self.$element.html();\n                self.$element.html(self.CurrentOption.countdownTime);\n                self.intervalId = setInterval(function () {\n                    self.action.call(self);\n                }, self.CurrentOption.countdownIntervalSec*1000);\n            }\n\n            if (self.countdownState == 'end') {\n                return true;\n            }\n            return false;\n        });\n    };\n\n    /**\n     * Сам непосредственный экшн для отсчета\n     */\n    CountdownElemForm.prototype.action = function () {\n        var time = parseInt(this.$element.html());\n        if (time > 0) {\n            time--;\n            this.$element.html(time);\n        } else {\n            this.$element.html(this.innerHtml);\n            this.countdownState = 'end';\n            clearInterval(this.intervalId);\n        }\n    }\n\n    /**\n     * Разршаем отправку формы тогда и только тогда, когда\n     * заканчивается обратный отсчет, до этого форму не отрпавляем\n     * @returns {boolean}\n     */\n    CountdownElemForm.prototype.sendForm = function () {\n        if (this.countdownState !== 'end') {\n            return false;\n        }\n\n        return true;\n    }\n\n    CountdownElemForm.prototype.options = {\n        countdownTime: 3,\n        countdownIntervalSec: 1,\n    };\n\n    CountdownElemForm.prototype.getOptions = function (options) {\n        if (options && (typeof options) == 'Object') {\n            for (var key in this.options) {\n                if (!options[key]) {\n                    options[key] = this.options[key];\n                };\n            }\n\n            return options;\n        }\n\n        return this.options;\n    };\n\n    var Countdown = function (options) {\n        //вернуть надо объект jQuery\n        return this.each(function () {\n            new CountdownElemForm(this, options);\n        });\n    };\n\n\n    var old = $.fn.countdown;\n\n    $.fn.countdown = Countdown;\n    $.fn.countdown.constructor = Countdown;\n\n    $.fn.countdown.noConflict = function () {\n        $.fn.countdown = old;\n        return this;\n    }\n\n}(jQuery);","/**\n * Created by roman on 10.07.16.\n */\n+function ($) {\n    'use strict';\n\n    var ImagePickerElem = function (element, option) {\n        this.template = '<div class=\"imagepicker__container\">'+\n                            '<label class=\"imagepicker\">'+\n                                '<div class=\"imagepicker__hover-place\">'+\n                                '</div>'+\n                            '</label>'+\n                        '</div>';\n        this.inputClass = 'imagepicker__input';\n        this.templateImg = '<img class=\"imagepicker__miniature img-responsive\">';\n        this.$element = $(element);\n\n        this.init();\n\n        var self = this;\n        this.$element.on('change', function () {\n            self.changedImage();\n        });\n    }\n\n    ImagePickerElem.prototype.init = function () {\n        this.$element.addClass(this.inputClass);\n        var src = this.$element.data('src');\n        this.$template = $(this.template);\n        this.$element.after(this.$template);\n\n        if (src != undefined) {\n            var $img = $(this.templateImg).attr('src', src);\n            this.$template.find('.imagepicker__hover-place').append($img);\n        }\n\n        this.$template.find('.imagepicker__hover-place').append(this.$element);\n    }\n\n    ImagePickerElem.prototype.changedImage = function () {\n        if (this.$element[0] && this.$element[0].files[0]) {\n            var file = this.$element[0].files[0];\n\n            var reader = new FileReader();\n            var self = this;\n            reader.onload = (function (file){\n                return function (e) {\n                    var $img = self.$template.find('img');\n                    if ($img.length == 0) {\n                        $img = $(self.templateImg).attr('src', e.target.result);\n                        self.$template.find('.imagepicker__hover-place').append($img);\n                    } else {\n                        self.$template.find('img.imagepicker__miniature').attr('src', e.target.result);\n                    }\n                    self.$template.find('.imagepicker__hover-place').css({\n                        'background':'transparent'\n                    });\n                };\n            })(file);\n\n            reader.readAsDataURL(file);\n        }\n    }\n\n    var ImagePicker = function (option) {\n        return this.each(function () {\n            new ImagePickerElem(this, option);\n        });\n    };\n\n    var old = $.fn.imagepicker;\n\n    $.fn.imagepicker = ImagePicker;\n    $.fn.imagepicker.constructor = ImagePicker;\n\n    $.fn.imagepicker.noConflict = function () {\n        $.fn.imagepicker = old;\n        return this;\n    }\n\n}(jQuery);","+function ($) {\n    'use strict';\n\n    var ImagePickerMultItem = function ($pathToImage, $template, $pathToOrig) {\n        var template = '<div class=\"imagepickermult__item\">'+\n                            '<div class=\"imagepickermult__item__container\">'+\n                                '<img>'+\n                                '<span class=\"imagepickermult__ation-panel\">'+\n                                    '<button class=\"imagepickermult__btn imagepickermult__btn_remove\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>'+\n                                '</span>'+\n                            '</div>'+\n                       '</div>';\n        var linkTemplate = '<button class=\"imagepickermult__btn imagepickermult__btn_link\" data-original-url=\"\"><i class=\"fa fa-link\" aria-hidden=\"true\"></i></button>';\n\n        this.$elem = $(template);\n        this.$elem.find('img').attr('src', $pathToImage);\n        var nameOfFile = $pathToImage.split('/');\n        nameOfFile = nameOfFile[nameOfFile.length-1];\n        this.$elem.find('button.imagepickermult__btn_remove').data('name', nameOfFile);\n        if ($pathToOrig) {\n            var $btnLink = $(linkTemplate);\n            $btnLink.data('content', $pathToOrig);\n            $btnLink.attr('title', 'Ссылка на оригинал');\n            $btnLink.data('placement', 'right');\n            $btnLink.data('container', 'body');\n            this.$elem.find('.imagepickermult__ation-panel').append($btnLink);\n            $btnLink.popover();\n        }\n\n        $template.prepend(this.$elem);\n        this.$template = $template;\n\n        var self = this;\n\n        /* Тут инициализация действий при нажатии на кнопку */\n        this.$elem.find('.imagepickermult__btn_remove').bind('click.imagepickermult', function () {\n            self.deleteItem();\n            return false;\n        });\n\n        this.$elem.find('.imagepickermult__btn_link').bind('click.imagepickermult', function () {\n            return false;\n        });\n    };\n\n    ImagePickerMultItem.prototype.deleteItem = function () {\n        var templateInput = '<input type=\"hidden\">';\n        var nameSpace = this.$template.data('namespace');\n        nameSpace = nameSpace+'[][remove]';\n\n        var nameOfFile = this.$elem.find('button.imagepickermult__btn_remove').data('name');\n        var $InputToRemove = $(templateInput);\n        $InputToRemove.attr('name', nameSpace).val(nameOfFile);\n        this.$elem.after($InputToRemove);\n        this.$elem.remove();\n    }\n\n    var ImagePickerAddItem = function ($elem, $template) {\n        var addBtnTpl = '<div class=\"imagepickermult__item add-toggle\">'+\n                            '<label class=\"imagepickermult__item__container\">'+\n                            '</label>'+\n                        '</div>';\n\n        this.templateImg = '<div class=\"imagepickermult__item\">'+\n                                '<div class=\"imagepickermult__item__container\">'+\n                                    '<img>'+\n                                    '<span class=\"imagepickermult__ation-panel\">'+\n                                        '<button class=\"imagepickermult__btn imagepickermult__btn_remove\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>'+\n                                    '</span>'+\n                                '</div>'+\n                            '</div>';\n        this.deleteInputTmp = '<input type=\"hidden\">';\n\n        $elem.after($template);\n        $elem.css({\n            'display':'none'\n        });\n\n        this.$addBtn = $(addBtnTpl);\n        this.$elem = $elem;\n        this.$template = $template;\n\n        $template.append(this.$addBtn);\n\n        this.$addBtn.find('label').append($elem);\n\n        var self = this;\n        /* Тут инициализация действий при выборе изображения, изображений */\n        this.$elem.bind('change', function () {\n            self.addSelectedImage();\n        });\n    };\n\n    ImagePickerAddItem.prototype.addSelectedImage = function () {\n        /* Создаем миниатюру */\n        /* Перемещаем туда наш $elem */\n        /* Помещаем в кнопку добавления клон */\n        var files = this.$elem[0].files;\n\n        for (var i = 0; i < files.length; i++) {\n            var reader = new FileReader();\n            var self = this;\n            reader.onload = (function (files){\n                return function (e) {\n                    console.log (files);\n                    var $Image = $(self.templateImg);\n                    $Image.find('img').attr('src', e.target.result);\n                    $Image.find('.imagepicker__hover-place').css({\n                        'background':'transparent'\n                    });\n                    $Image.data('file-name', files.name);\n                    $Image.find('.imagepickermult__btn_remove').bind('click.imagepickermult', function () {\n                        var name = $(this).closest('.imagepickermult__item').data('file-name');\n                        var nameElem = self.$elem.attr('name')+\"[notupload]\";\n                        var $input = $(self.deleteInputTmp);\n                        $input.attr('name', nameElem);\n                        $input.val(name);\n                        $(this).closest('.imagepickermult__item').after($input);\n                        $(this).closest('.imagepickermult__item').remove();\n\n                    });\n\n                    self.$template.find('.add-toggle').before($Image);\n                };\n            })(files[i]);\n            reader.readAsDataURL(files[i]);\n        }\n\n    };\n\n    var ImagePickerMult = function (option) {\n        return this.each(function () {\n            /* тут главный конструктор для элемента this */\n            var template = '<div class=\"imagepickermult__container\">'+\n                            '</div>';\n            var hiddenNamespace = '<input type=\"hidden\">';\n\n\n\n            /* Сам элемент в представлении jQuery */\n            var $elem = $(this);\n\n            /* Загруженные изображения */\n            var images = $elem.data('upload-images');\n            images = images.split(',');\n            images.pop();\n\n            /* Оригиналы загруженных изображений */\n            var imagesOrig = $elem.data('upload-images-orig');\n            if (imagesOrig && imagesOrig.length > 0) {\n                imagesOrig = imagesOrig.split(',');\n                imagesOrig.pop();\n            }\n\n\n\n            /* Неймспейс в котором храняться изображения */\n            var namespace = $elem.attr('id');\n\n            var $template = $(template);\n            $template.data('namespace', namespace);\n            /*\n            var $hiddenInput = $(hiddenNamespace);\n            $hiddenInput.attr('name', 'namespace');\n            $hiddenInput.val(namespace);\n            $template.append($hiddenInput);*/\n            /* Создаем кнопку добалвения элементов */\n            new ImagePickerAddItem($elem, $template);\n\n\n            for (var i = 0; i < images.length; i++) {\n                if (imagesOrig && imagesOrig[i]) {\n                    new ImagePickerMultItem(images[i], $template, imagesOrig[i]);\n                } else {\n                    new ImagePickerMultItem(images[i], $template)\n                }\n\n            }\n\n\n\n        });\n    };\n\n    var old = $.fn.imagepickermult;\n\n    $.fn.imagepickermult = ImagePickerMult;\n    $.fn.imagepickermult.constructor = ImagePickerMult;\n\n    $.fn.imagepickermult.noConflict = function () {\n        $.fn.imagepickermult = old;\n        return this;\n    }\n}(jQuery);","+function ($) {\n\n\n    var WeekWorkElem = function (dayName, $data, callbackAfterChangeTime, $elem) {\n        this.template = '<div class=\"row\">'+\n                            '<div class=\"col-sm-2 name-of-day\"></div>'+\n                            '<div class=\"col-sm-3\"><input class=\"form-control time-from\" placeholder=\"00:00\"></div>'+\n                            '<div class=\"col-sm-1\" style=\"text-align: center;\">-</div>'+\n                            '<div class=\"col-sm-3\"><input class=\"form-control time-to\" placeholder=\"24:00\"></div>'+\n                            '<div class=\"col-sm-3\">'+\n                                '<a href=\"#\" class=\"btn btn-default all-day\"><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> 24</a>'+\n                                '<a href=\"#\" class=\"btn btn-danger clear-interval\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>'+\n                            '</div>'+\n                        '</div>';\n\n        this.$elem = $elem;\n        this.$day = $(this.template);\n        this.$day.find('.name-of-day').text(dayName);\n        this.$timeFrom = this.$day.find('.time-from');\n        this.$timeTo = this.$day.find('.time-to');\n        this.$allDayWorkBtn = this.$day.find('.all-day');\n        this.$clearIntervalBtn = this.$day.find('.clear-interval');\n        this.dayName = dayName;\n\n        this.callback = callbackAfterChangeTime;\n\n        if ($data != undefined) {\n            if ($data.timeFrom) {\n                this.$timeFrom.val($data.timeFrom);\n            }\n\n            if ($data.timeTo) {\n                this.$timeTo.val($data.timeTo);\n            }\n        }\n\n        var self = this;\n\n        this.$allDayWorkBtn.bind('click.weekwork', function () {\n            self.setAllDay();\n            self.changeTime();\n            return false;\n        });\n\n        this.$clearIntervalBtn.bind('click.weekwork', function () {\n            self.setClearTime();\n            self.changeTime();\n            return false;\n        });\n\n        this.$timeTo.bind('change.weekwork', function () {\n            $(this).val(self._checkTime($(this).val()));\n            self.changeTime();\n        });\n\n        this.$timeFrom.bind('change.weekwork', function () {\n            $(this).val(self._checkTime($(this).val()));\n            self.changeTime();\n        });\n    };\n\n    /* Проверка введенного пользователем времени, возвращает время которое надо установить */\n    WeekWorkElem.prototype._checkTime = function (time) {\n        if (time != '') {\n            time = time.split(':');\n            if (time.length !== 2) {\n                return '00:00';\n            }\n\n            var hours = time[0];\n            if (isNaN(parseInt(hours))) {\n                return '00:00';\n            }\n            hours = parseInt(hours);\n\n            if (hours < 0 || hours > 23) {\n                return '00:00';\n            } else {\n                if (hours >= 0 && hours < 10) {\n                    hours = '0'+hours;\n                }\n            }\n\n            var minute = time[1];\n            if (isNaN(parseInt(minute))) {\n                return '00:00';\n            }\n\n            minute = parseInt(minute);\n\n            if (minute < 0 || minute > 59) {\n                return '00:00';\n            } else {\n                if (minute >= 0 && minute < 10) {\n                    minute = '0'+minute;\n                }\n            }\n\n            return hours+':'+minute;\n        }\n    }\n\n\n    /* Установить круглосуточный режим работы для данного дня */\n    WeekWorkElem.prototype.setAllDay = function () {\n        this.$timeFrom.val('00:00');\n        this.$timeTo.val('23:59');\n    }\n\n    /* Очистить временной интервал для данного рабочего дня */\n    WeekWorkElem.prototype.setClearTime = function () {\n        this.$timeFrom.val('');\n        this.$timeTo.val('');\n    }\n\n    /* Устанавлиает актуальное время для текущего дня */\n    WeekWorkElem.prototype.changeTime = function () {\n        var timingInterval = {};\n        timingInterval.timeFrom = this.$timeFrom.val();\n        timingInterval.timeTo = this.$timeTo.val();\n        timingInterval.day = this.dayName;\n        this.callback(timingInterval, this.$elem);\n    }\n\n    WeekWorkElem.prototype.getElem = function () {\n        return this.$day;\n    }\n\n    var WeekWorkList = function (element) {\n        this.days = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];\n\n        this.$element = $(element);\n        this.dataOfDays = this.$element.val();\n        try {\n            this.dataOfDays = JSON.parse(this.dataOfDays);\n        } catch (Error) {\n            this.dataOfDays = {};\n        }\n        this.$element.attr('type', 'hidden');\n        this.$closestDiv = this.$element.closest('div');\n\n        for (var i = 0; i < this.days.length; i++) {\n            var tmp = new WeekWorkElem(this.days[i], this.dataOfDays[i], this.changedTimeDay, this.$element);\n            this.$closestDiv.append(tmp.getElem());\n        }\n\n    };\n\n    WeekWorkList.prototype.changedTimeDay = function (data, $elem) {\n        var dataSet = $elem.val();\n        try {\n            dataSet = JSON.parse(dataSet);\n        } catch (Error) {\n            dataSet = {};\n        }\n        this.days = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];\n        for (var i = 0; i < this.days.length; i++) {\n            if (this.days[i] == data.day) {\n                dataSet[i] = data;\n            }\n        }\n\n        $elem.val(JSON.stringify(dataSet));\n    };\n\n    var WeekWork = function (option) {\n        return this.each(function () {\n            //Тут каждый элемент из всей выборки\n            new WeekWorkList (this);\n        });\n    };\n\n    var old = $.fn.weekwork;\n\n    $.fn.weekwork = WeekWork;\n    $.fn.weekwork.constructor = WeekWork;\n\n    $.fn.weekwork.noConflict = function () {\n        $.fn.weekwork = old;\n        return this;\n    }\n} (jQuery);","+function ($) {\n\n\n    var YMapElement = function (element, $options) {\n\n        this.$templateModal = $(this.templateModal);\n        this.$element = $(element);\n\n        /* Инициализируем id самого модального окна */\n        this.idModal = this.$element.data('id-modal');\n        if (this.idModal == undefined || this.idModal == '') {\n            throw new Error('Не задан атрибут data-id-modal');\n        }\n\n        /* Инициализируем id карты для дальнейшей работы с картой */\n        this.idMap = this.$element.data('id-map');\n        if (this.idMap == undefined || this.idMap == '') {\n            throw new Error('Не задан атрибут data-id-map');\n        }\n\n        /* Проверим, подгружен ли объект ymaps и если нет то выкинем ошибку */\n        if (!ymaps) {\n            throw new Error('Не подключены яндекс карты');\n        }\n\n        /* Проинициализируем поле с технической информацией об адресе */\n        this.nameTechInput = this.$element.data('hidden-name');\n        if (this.nameTechInput == undefined || this.nameTechInput == '') {\n            throw new Error('Не задан атрибут data-hidden-name');\n        }\n\n        /* Посмотрим технические данные и человекопонятный адрес в элементе */\n        try {\n            this.technicalData = this.$element.data('tech-data');\n\n            if ((typeof this.technicalData) !== 'object') {\n                this.technicalData = JSON.parse(this.technicalData);\n            }\n        } catch (err) {\n            this.technicalData = {};\n        }\n\n        this.userData = this.$element.val();\n\n        /* Добавляем поле для сохранения технической информации */\n        this.$hiddenInput = $('<input type=\"hidden\">');\n        this.$hiddenInput.attr('name', this.nameTechInput);\n        this.$hiddenInput.val(JSON.stringify(this.technicalData));\n        this.$element.after(this.$hiddenInput);\n\n        /* Текуший элемент только readonly */\n        this.$element.attr('readonly', true);\n\n        this.$templateModal.attr('id', this.idModal);\n        this.$templateModal.find('.maps > div').attr('id', this.idMap);\n\n        $('body').append(this.$templateModal);\n\n\n        var self = this;\n\n        /* Инициализируем карту и поведение элемента */\n        ymaps.ready(function () {\n\n            self.$element.on('click', function() {\n                /* инициализируем карту исходя из установленных значений */\n                self.initMap();\n                $('#'+self.idModal).modal('show');\n            });\n\n            /* Инизиализируем сохранение данных после выбора объекта на карте */\n            self.$templateModal.find('form').on('submit', function () {\n                self.saveSelectedObject();\n                $('#'+self.idModal).modal('hide');\n                return false;\n            });\n\n            self.map = new ymaps.Map(self.idMap, {\n                center: self.defaults.defaultShowPoint,\n                zoom: self.defaults.zoom,\n                controls: [],\n            });\n\n            self.searchControl = new ymaps.control.SearchControl({\n                options: {\n                    provider: 'yandex#search',\n                    kind: 'district'\n                }\n            });\n\n            self.map.controls.add(self.searchControl);\n\n            self.searchControl.events.add('resultselect', function (e) {\n                var index = self.searchControl.getSelectedIndex(e);\n                var result = self.searchControl.getResult(index);\n                result.then(function (res) {\n                    self.objectSelected (res);\n                }, function(err) {\n                    console.log(err);\n                });\n            });\n\n        });\n\n\n    };\n\n    YMapElement.prototype.initMap = function () {\n        console.log ('initMap');\n        /* Берем техническую информацию, создаем объект геолокации, добавляем его на карту */\n        try {\n            this.technicalData = this.$element.data('tech-data');\n            if ((typeof this.technicalData) !== 'object') {\n                this.technicalData = JSON.parse(this.technicalData);\n            }\n        } catch (err) {\n            this.technicalData = {};\n        }\n        if (this.technicalData.coordinates) {\n            this.selectedCoordinats = this.technicalData.coordinates;\n        } else {\n            this.selectedCoordinats = undefined;\n        }\n\n        if (this.technicalData.stops) {\n            this.stops = this.technicalData.stops;\n        } else {\n            this.stops = undefined;\n        }\n\n\n        this.userData = this.$element.val();\n\n        this.$templateModal.find('input[name=\"address\"]').val(this.userData);\n        if (ymaps && ymaps.Placemark && this.technicalData.coordinates && this.technicalData.coordinates.length == 2) {\n            var Placemark = new ymaps.Placemark(this.technicalData.coordinates);\n            this.map.geoObjects.add(Placemark);\n            this.map.setCenter(this.technicalData.coordinates, 16);\n        }\n    }\n\n    /* Функция обработки выбранного объекта на карте */\n    YMapElement.prototype.objectSelected = function (searchResult) {\n        /* searchResult тип IGeoObject */\n        /* Достаем человекопонятный адрес и координаты */\n        this.$templateModal.find('input[name=\"address\"]').val(searchResult.properties.get('address'));//searchResult.properties._data.address);\n        this.selectedCoordinats = searchResult.geometry.getCoordinates();\n        this.stops = searchResult.properties.get('stops'); //Получили ближайшие станции метро, их может быть несколько\n    }\n\n    /* Функция для присвоения полученного результата в соответствующие поля формы для дальнейшего сохранения */\n    YMapElement.prototype.saveSelectedObject = function () {\n        var coordinats = this.selectedCoordinats;\n        var textOfAddress = this.$templateModal.find('input[name=\"address\"]').val();\n        var stops = this.stops;\n\n        if (coordinats != '' && textOfAddress != '') {\n            this.$element.val(textOfAddress);\n            var data;\n            try {\n                data = this.$element.data('tech-data');\n                if ((typeof data) !== 'object') {\n                    data = JSON.parse(data);\n                }\n            } catch (err) {\n                data = {};\n            }\n\n            data.coordinates = coordinats;\n            data.stops = stops;\n            this.$element.data('tech-data', JSON.stringify(data));\n            this.$hiddenInput.val(JSON.stringify(data));\n        }\n    }\n\n    /* Опции отображения карты */\n    YMapElement.prototype.defaults = {\n        defaultShowPoint: [59.939095, 30.315868], //Точка центрирования карты по умолчанию\n        zoom: 10,\n    };\n\n    /* Шабон модального окна с картой */\n    YMapElement.prototype.templateModal = '<div class=\"modal fade\" id=\"\" tabindex=\"-1\" role=\"dialog\">'+\n                                                '<div class=\"modal-dialog\">'+\n                                                    '<div class=\"modal-content\">'+\n                                                        '<form class=\"form-horizontal\">'+\n                                                            '<div class=\"modal-header\">'+\n                                                                'Выбор местаположения'+\n                                                                '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">'+\n                                                                    '<span aria-hidden=\"true\">&times;</span>'+\n                                                                '</button>'+\n                                                                '<h4 class=\"modal-title\"></h4>'+\n                                                            '</div>'+\n                                                            '<div class=\"modal-body\">'+\n                                                                '<div class=\"alert alert-info\">Введите необходимый адрес в стрку поиска на карте и нажмите Enter<br>'+\n                                                                'Убедитесь что соответствующий адрес отображается в поле под картой</div>'+\n                                                                '<div class=\"form-group maps\">'+\n                                                                    '<div class=\"col-sm-12\" id=\"\" style=\"height:300px;\"></div>'+\n                                                                '</div>'+\n                                                                '<div class=\"form-group\">'+\n                                                                    '<div class=\"col-sm-12\">'+\n                                                                        '<input type=\"text\" class=\"form-control\" name=\"address\" readonly>'+\n                                                                    '</div>'+\n                                                                '</div>' +\n                                                            '</div>'+\n                                                            '<div class=\"modal-footer\">'+\n                                                                '<button type=\"submit\" class=\"btn btn-primary\">Выбрать</button>'+\n                                                                '<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Отмена</button> '+\n                                                            '</div>'+\n                                                        '</form>'+\n                                                    '</div>'+\n                                                '</div>'+\n                                            '</div>';\n\n    var YMap = function (option) {\n        return this.each(function () {\n            //Тут каждый элемент из всей выборки\n            new YMapElement(this, option);\n        });\n    };\n\n    var old = $.fn.ymap;\n\n    $.fn.ymap = YMap;\n    $.fn.ymap.constructor = YMap;\n\n    $.fn.ymap.noConflict = function () {\n        $.fn.ymap = old;\n        return this;\n    }\n} (jQuery);"],"sourceRoot":"/source/"}